<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>gradle on 无糖拿铁，谢谢</title>
    <link>/tags/gradle/</link>
    <description>Recent content in gradle on 无糖拿铁，谢谢</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>CC BY-NC 4.0 CN</copyright>
    <lastBuildDate>Mon, 24 Feb 2020 21:09:31 +0000</lastBuildDate><atom:link href="/tags/gradle/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 Gradle 的 Java 插件构建 Java 项目</title>
      <link>/posts/use-gradle-to-build-java-project/</link>
      <pubDate>Mon, 24 Feb 2020 21:09:31 +0000</pubDate>
      
      <guid>/posts/use-gradle-to-build-java-project/</guid>
      <description>在上一篇文章中，我们在没有使用任何插件的情况下，练习了使用 Gradle 构建 Java 项目，最后得到一个脆弱的构建脚本和不符合约定的目录结构。 对此，Gradle</description>
    </item>
    
    <item>
      <title>使用 Gradle 但不使用 Java 插件构建 Java 项目</title>
      <link>/posts/use-gradle-to-build-java-project-without-plugin/</link>
      <pubDate>Sat, 22 Feb 2020 23:42:35 +0000</pubDate>
      
      <guid>/posts/use-gradle-to-build-java-project-without-plugin/</guid>
      <description>本文目标是探索在没有使用任何额外插件的情况下，如何使用 Gradle 构建一个 Java 项目，以此对比使用 Java 插件时得到的好处。 初始化项目 使用 Gradle Init 插件提供的 init task 来创</description>
    </item>
    
  </channel>
</rss>
