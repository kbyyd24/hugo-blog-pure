<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java 8 on 无糖拿铁，谢谢</title><link>/tags/java-8/</link><description>Recent content in Java 8 on 无糖拿铁，谢谢</description><generator>Hugo -- gohugo.io</generator><copyright>CC BY-NC 4.0 CN</copyright><lastBuildDate>Mon, 20 Feb 2017 00:00:00 +0000</lastBuildDate><atom:link href="/tags/java-8/index.xml" rel="self" type="application/rss+xml"/><item><title>「Java 8 函数式编程」读书笔记——数据并行化</title><link>/posts/java_8_lambdas_functional_programming_note_parallel/</link><pubDate>Mon, 20 Feb 2017 00:00:00 +0000</pubDate><guid>/posts/java_8_lambdas_functional_programming_note_parallel/</guid><description>本书第六章的读书笔记，也是我这个系列的最后一篇读书笔记。后面7、8、9章分别讲的“测试、调试与重构”、“设计和架构的原则”以及“使用Lamb</description></item><item><title>「Java 8 函数式编程」读书笔记——高级集合类和收集器</title><link>/posts/java_8_lambdas_functional_programming_note_collector/</link><pubDate>Fri, 10 Feb 2017 00:00:00 +0000</pubDate><guid>/posts/java_8_lambdas_functional_programming_note_collector/</guid><description>本章是该书的第五章, 主要讲了方法引用和收集器 方法引用 形如: artist -&amp;gt; artist.getName() (String arg) -&amp;gt; arg.length() 这样的表达式, 可以简写为: Artist::getName String::length 这种简写的语法被称为方法引用. 方法引用</description></item><item><title>「Java 8 函数式编程」读书笔记——类库</title><link>/posts/java_8_lambdas_functional_programming_note_lib/</link><pubDate>Wed, 08 Feb 2017 00:00:00 +0000</pubDate><guid>/posts/java_8_lambdas_functional_programming_note_lib/</guid><description>本书第四章的读书笔记, 本章主要阐述: 如何使用Lambda表达式. 基本类型 考虑到装箱类型过于占用内存, JDK提供了针对基本类型的操作, 以达到优</description></item><item><title>「Java 8 函数式编程」读书笔记——流</title><link>/posts/java_8_lambdas_functional_programming_note_stream/</link><pubDate>Mon, 06 Feb 2017 00:00:00 +0000</pubDate><guid>/posts/java_8_lambdas_functional_programming_note_stream/</guid><description>本文是「Java 8 函数式编程」第三章的读书笔记，章名为流。本章主要介绍了外部迭代与内部迭代以及常用的高阶函数。 外部迭代与内部迭代 外部迭代 过去</description></item><item><title>「Java 8 函数式编程」读书笔记——lambda表达式</title><link>/posts/java_8_lambdas_functional_programming_note_lambda_expression/</link><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid>/posts/java_8_lambdas_functional_programming_note_lambda_expression/</guid><description>本文是「Java 8 函数式编程」第二章的读书笔记。 Lambda引入的变化 Lambda表达式，是一种紧凑的、传递行为的方式，从编程思想上来讲，就</description></item></channel></rss>