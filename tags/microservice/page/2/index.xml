<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>microservice on 无糖拿铁，谢谢</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/tags/microservice/</link><description>Recent content in microservice on 无糖拿铁，谢谢</description><generator>Hugo -- gohugo.io</generator><copyright>CC BY-NC 4.0 CN</copyright><lastBuildDate>Sat, 01 Feb 2020 02:53:38 +0000</lastBuildDate><atom:link href="https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/tags/microservice/index.xml" rel="self" type="application/rss+xml"/><item><title>码农一年小结</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/biref-summary-of-one-year-of-work/</link><pubDate>Thu, 02 Aug 2018 23:29:30 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/biref-summary-of-one-year-of-work/</guid><description>还差几天就工作满一年了，记录一下一些不足以写成博客的经验吧。 关于数据库访问层 做后端开发必定是要访问数据库的，经历的几个项目分别使用了 JDBCTemplate 和 QueryDSL ，</description></item><item><title>契约测试小结</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/contracts-test-brief-summary/</link><pubDate>Fri, 20 Jul 2018 00:40:10 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/contracts-test-brief-summary/</guid><description>现在的项目上在尝试契约测试这个东西，使用了大半年，再加上业余的一些研究，简单的总结一下。 契约测试解决的问题 契约测试是在微服务实践中提出的，目</description></item><item><title>Http Header 中的 referer 字段</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/http-hearders-referer/</link><pubDate>Sat, 04 Nov 2017 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/http-hearders-referer/</guid><description>在做企业微信应用开发的时候，有使用第三方单点登录的需求。根据企业微信的文档，设置好登录授权发起域名和回调域名后，编写了一个Controlle</description></item><item><title>定制Java中的Validation</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/custome_validation_in_java/</link><pubDate>Wed, 25 Oct 2017 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/custome_validation_in_java/</guid><description>Java Validation简介 javax.validation包提供了大量用于验证数据的API工具，可以帮助开发者方便的检验程序的输入输出。最近</description></item><item><title>SpringMVC中Controller的测试</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/springmvc%E4%B8%ADcontroller%E7%9A%84%E6%B5%8B%E8%AF%95/</link><pubDate>Sun, 04 Jun 2017 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/springmvc%E4%B8%ADcontroller%E7%9A%84%E6%B5%8B%E8%AF%95/</guid><description>参考 http://www.jianshu.com/p/ad7995332dd9 controller: @Controller @RequestMapping(&amp;#34;/system&amp;#34;) public class SysMapController { @Autowired private FirstSysMapService firstSysMapService;//注入Service @RequestMapping(value = &amp;#34;/first/map&amp;#34;, method = RequestMethod.GET, produces = {&amp;#34;application/json;charset=UTF-8&amp;#34;}) @ResponseBody//响应类</description></item><item><title>「JavaScript 语言精粹」读书笔记--函数</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/javascript_the_good_parts_function/</link><pubDate>Mon, 06 Mar 2017 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/javascript_the_good_parts_function/</guid><description>函数对象 JavaScript中函数就是对象. 函数对象连接到Function.prototype. 当把一个函数当作构造函数(使用new关键字)</description></item><item><title>「JavaScript 语言精粹」读书笔记--对象</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/javascritp_the_good_parts_object/</link><pubDate>Sat, 04 Mar 2017 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/javascritp_the_good_parts_object/</guid><description>前两章介绍基础, 没什么笔记好记录. 这是第三章. 什么是对象 在JavaScript中, 除了简单数据类型(数字, 字符串, 布尔值, null和unde</description></item><item><title>「Java 8 函数式编程」读书笔记——数据并行化</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/java_8_lambdas_functional_programming_note_parallel/</link><pubDate>Mon, 20 Feb 2017 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/java_8_lambdas_functional_programming_note_parallel/</guid><description>本书第六章的读书笔记，也是我这个系列的最后一篇读书笔记。后面7、8、9章分别讲的“测试、调试与重构”、“设计和架构的原则”以及“使用Lamb</description></item><item><title>「Java 8 函数式编程」读书笔记——高级集合类和收集器</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/java_8_lambdas_functional_programming_note_collector/</link><pubDate>Fri, 10 Feb 2017 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/java_8_lambdas_functional_programming_note_collector/</guid><description>本章是该书的第五章, 主要讲了方法引用和收集器 方法引用 形如: artist -&amp;gt; artist.getName() (String arg) -&amp;gt; arg.length() 这样的表达式, 可以简写为: Artist::getName String::length 这种简写的语法被称为方法引用. 方法引用</description></item><item><title>「Java 8 函数式编程」读书笔记——类库</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/java_8_lambdas_functional_programming_note_lib/</link><pubDate>Wed, 08 Feb 2017 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/java_8_lambdas_functional_programming_note_lib/</guid><description>本书第四章的读书笔记, 本章主要阐述: 如何使用Lambda表达式. 基本类型 考虑到装箱类型过于占用内存, JDK提供了针对基本类型的操作, 以达到优</description></item><item><title>「Java 8 函数式编程」读书笔记——流</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/java_8_lambdas_functional_programming_note_stream/</link><pubDate>Mon, 06 Feb 2017 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/java_8_lambdas_functional_programming_note_stream/</guid><description>本文是「Java 8 函数式编程」第三章的读书笔记，章名为流。本章主要介绍了外部迭代与内部迭代以及常用的高阶函数。 外部迭代与内部迭代 外部迭代 过去</description></item><item><title>「Java 8 函数式编程」读书笔记——lambda表达式</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/java_8_lambdas_functional_programming_note_lambda_expression/</link><pubDate>Sun, 05 Feb 2017 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/java_8_lambdas_functional_programming_note_lambda_expression/</guid><description>本文是「Java 8 函数式编程」第二章的读书笔记。 Lambda引入的变化 Lambda表达式，是一种紧凑的、传递行为的方式，从编程思想上来讲，就</description></item><item><title>使用AOP获取RequestBody</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/get_requestbody_by_aop/</link><pubDate>Sun, 20 Nov 2016 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/get_requestbody_by_aop/</guid><description>一开始使用spring拦截器拦截请求记录日志,对于请求路径、header这些都很好获取,唯独POST请求无法获取其中的RequestBody</description></item><item><title>服务器配置小记</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%B0%8F%E8%AE%B0/</link><pubDate>Thu, 17 Nov 2016 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%B0%8F%E8%AE%B0/</guid><description>最近一个项目要上线了,需要搭服务器,本来是交给同学搭的,结果遇到了大坑,还得自己来,今天把这些坑记一下. 服务器有好几台,都是CentOS6.</description></item><item><title>Spring高级装配之运行时注入</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/spring%E9%AB%98%E7%BA%A7%E8%A3%85%E9%85%8D%E4%B9%8B%E8%BF%90%E8%A1%8C%E6%97%B6%E6%B3%A8%E5%85%A5/</link><pubDate>Wed, 17 Aug 2016 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/spring%E9%AB%98%E7%BA%A7%E8%A3%85%E9%85%8D%E4%B9%8B%E8%BF%90%E8%A1%8C%E6%97%B6%E6%B3%A8%E5%85%A5/</guid><description>{:toc #zhuru} 运行时注入与硬编码注入是相对的。硬编码注入在编译时就已经确定了，运行时注入则可能需要一些外部的参数来解决。 Spring提供的两种在运行时</description></item><item><title>Sort Colors 解题思路</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/sort-solors-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/</link><pubDate>Fri, 29 Jul 2016 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/sort-solors-%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF/</guid><description>题目 先把题目放上： 链接：https://leetcode.com/problems/sort-colors Given an array with n objects colored red, white or blue, sort them so that objects of</description></item><item><title>利用NGINX反向代理避免跨域</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E9%81%BF%E5%85%8D%E8%B7%A8%E5%9F%9F/</link><pubDate>Tue, 07 Jun 2016 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/%E5%88%A9%E7%94%A8nginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E9%81%BF%E5%85%8D%E8%B7%A8%E5%9F%9F/</guid><description>在慕课网上看了高并发的课程，准备用spring+Mybaits来开发新的项目。遇到了前端跨域请求的问题。 服务器上nginx+tomcat，其</description></item><item><title>从http到https</title><link>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/from_http_to_https/</link><pubDate>Fri, 27 May 2016 00:00:00 +0000</pubDate><guid>https://blog.gaoyuexiang.cn/kbyyd24.github.io.candidate/posts/from_http_to_https/</guid><description>这个五一折腾了下https，看了加密的建立过程和原理，然后动手实践，把博客从不支持https的阿里云虚机上搬到了新买的腾讯云的主机上，配好了</description></item></channel></rss>